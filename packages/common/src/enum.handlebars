{{{ toComment description }}}
{{#with (importEnum name) }}
  {{#if file}}
    import {{#if type}}{ {{type}}{{#ifCond type "!=" (concat @root.config.interfacePrefix (convert name 'typeNames'))}} as {{@root.config.interfacePrefix}}{{ convert name 'typeNames' }}{{/ifCond}} }{{else}}{{@root.config.interfacePrefix}}{{ convert name 'typeNames' }}{{/if}} from "{{file}}"

    type {{@root.config.interfacePrefix}}{{ convert (concat name "ValueMap") 'typeNames'}} = {
      {{#each ../values}}
        {{{ value }}}: {{@root.config.interfacePrefix}}{{ convert ../name 'typeNames' }},
      {{/each}}
    }
  {{/if}}

{{else}}
  {{#if @root.config.enumsAsTypes }}
  type {{@root.config.interfacePrefix}}{{ convert name 'typeNames' }} = {{#each values }}{{{ getEnumValue ../name value }}}{{#unless @last}} | {{/unless}}{{/each}};
  {{else}}
  {{#if @root.config.constEnums }}const {{/if}}enum {{@root.config.interfacePrefix}}{{ convert name 'typeNames' }} {
  {{#each values }}
    {{ convert value 'enumValues' }} = {{{ getEnumValue ../name value }}},
  {{/each}}
  }
  {{/if}}
{{/with}}
